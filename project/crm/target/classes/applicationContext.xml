<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

        <context:component-scan base-package="com.yang.service"/>
    <context:property-placeholder location="classpath:jdbc.properties"/>
            <!--配置数据源-->
            <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
                <property name="driverClassName" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </bean>

            <!--配置 SqlSessionFactory -->
            <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
                <property name="dataSource" ref="dataSource" />
                <!--批量起别名-->
                <property name="typeAliasesPackage" value="com.yang.domain" />
                <!--指定MyBatis主配置文件，用于创建 SqlSessionFactory -->
                <property name="configLocation" value="classpath:mybatis-config.xml"/>
            </bean>

            <!--Spring整合MyBatis-->
            <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                <!-- 指定SqlSessionFactory，用于创建接口的代理类 -->
                <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
                <!--扫描映射文件，同时为接口创建代理类，并交给Spring管理-->
                <property name="basePackage" value="com.yang.mapper" />
            </bean>

    <!--配置事务管理器-->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    				<!--这里放数据源-->
            <property name="dataSource" ref="dataSource"/>
        </bean>
        <!--配置通知-->
        <tx:advice id="interceptor" transaction-manager="transactionManager">
            <tx:attributes>
                <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
                <tx:method name="login*" propagation="SUPPORTS" read-only="true"/>
                <tx:method name="*" />
            </tx:attributes>
        </tx:advice>
        <!--配置AOP-->
        <aop:config>
            <aop:pointcut id="all" expression="execution(* *..service..*.*(..))"/>
            <aop:advisor advice-ref="interceptor" pointcut-ref="all"/>
        </aop:config>

</beans>